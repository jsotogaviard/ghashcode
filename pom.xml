<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>trio.google.hashcode</groupId>
	<artifactId>ghashcode</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>google hashcode</name>

	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<properties>
		<jacoco.version>0.7.2.201409121644</jacoco.version>
		<springVersion>4.1.4.RELEASE</springVersion>
		<springSecurityVersion>3.2.5.RELEASE</springSecurityVersion>
		<cxf.version>3.0.2</cxf.version>
		<jetty.version>9.2.3.v20140905</jetty.version>
		<jackson.version>2.5.0</jackson.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Component dependencies -->
			<dependency>
				<groupId>i18nlog</groupId>
				<artifactId>i18nlog</artifactId>
				<version>1.0.10</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.19.0-GA</version>
			</dependency>
			<dependency>
				<groupId>org.javolution</groupId>
				<artifactId>javolution-core-java</artifactId>
				<version>6.0.0</version>
			</dependency>
			<dependency>
				<groupId>net.sf.trove4j</groupId>
				<artifactId>trove4j</artifactId>
				<version>3.0.3</version>
			</dependency>

			<!-- Spring Dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${springVersion}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Spring Security Dependencies -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${springSecurityVersion}</version>

				<exclusions>
					<!-- We don't inherit base spring dependencies -->
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${springSecurityVersion}</version>

				<!-- We don't inherit base spring dependencies -->
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${springSecurityVersion}</version>

				<!-- We don't inherit base spring dependencies -->
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- JGroups -->
			<dependency>
				<groupId>org.jgroups</groupId>
				<artifactId>jgroups</artifactId>
				<version>3.4.3.Final</version>
			</dependency>

			<!-- Java Servlet Spec -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>4.3.8.Final</version>
			</dependency>

			<!-- Apache CXF Dependencies -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-impl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-security-cors</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- JSON -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- Jetty dependencies -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.jetty.orbit</groupId>
						<artifactId>javax.servlet</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-annotations</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-client</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>javax-websocket-server-impl</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-servlet</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Testing dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.8</version>
			</dependency>
			<dependency>
				<groupId>org.perf4j</groupId>
				<artifactId>perf4j</artifactId>
				<version>0.9.16</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.11.0.SP1</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.3.176</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<!-- JDK 7 is required for the Sandbox Application -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-XX:MaxPermSize=128M</argLine>
				</configuration>
			</plugin>

			<!-- Javadoc Configuration (aggregate from all Quartet FS dependencies) -->
			<!-- Run "mvn javadoc:aggregate-jar" from command line to execute -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<show>public</show>
					<excludePackageNames>*.mondrian.*:</excludePackageNames>
					<includeDependencySources>true</includeDependencySources>
					<dependencySourceIncludes>
						<dependencySourceInclude>quartetfs.*:*</dependencySourceInclude>
					</dependencySourceIncludes>
					<dependencySourceExcludes>
						<dependencySourceExclude>quartetfs.composer.activation:*</dependencySourceExclude>
					</dependencySourceExcludes>
				</configuration>
			</plugin>

			<!-- Assembly plugin to package all the sandbox dependencies ('mvn assembly:assembly') -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Workaround for m2e unsupported plugins -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>
</project>
